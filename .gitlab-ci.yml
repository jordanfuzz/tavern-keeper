stages:
  - build
  # - test
  - deploy

build-api:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  before_script:
    - echo ${REGISTRY_PASSWORD} | base64 -d | docker login -u ${REGISTRY_USER} --password-stdin
  script:
    - docker build --tag ${CONTAINER_IMAGE}-api:latest --tag ${CONTAINER_IMAGE}-api:${CI_COMMIT_SHORT_SHA} ./api
    - docker push ${CONTAINER_IMAGE}-api:latest
    - docker push ${CONTAINER_IMAGE}-api:${CI_COMMIT_SHORT_SHA}
  tags:
    - production

build-bot:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  before_script:
    - echo ${REGISTRY_PASSWORD} | base64 -d | docker login -u ${REGISTRY_USER} --password-stdin
  script:
    - docker build --tag ${CONTAINER_IMAGE}-bot:latest --tag ${CONTAINER_IMAGE}-bot:${CI_COMMIT_SHORT_SHA} ./bot
    - docker push ${CONTAINER_IMAGE}-bot:latest
    - docker push ${CONTAINER_IMAGE}-bot:${CI_COMMIT_SHORT_SHA}
  tags:
    - production

build-ui:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  before_script:
    - echo ${REGISTRY_PASSWORD} | base64 -d | docker login -u ${REGISTRY_USER} --password-stdin
  script:
    - docker build --tag ${CONTAINER_IMAGE}-ui:latest --tag ${CONTAINER_IMAGE}-ui:${CI_COMMIT_SHORT_SHA} -f ./app/Dockerfile.prod ./app
    - docker push ${CONTAINER_IMAGE}-ui:latest
    - docker push ${CONTAINER_IMAGE}-ui:${CI_COMMIT_SHORT_SHA}
  tags:
    - production

# test:
#   stage: test
#   image: docker:stable
#   services:
#     - docker:dind
#   before_script:
#     - echo ${REGISTRY_PASSWORD} | base64 -d | docker login -u ${REGISTRY_USER} --password-stdin
#   script:
#     - docker pull ${CONTAINER_IMAGE}-api:${CI_COMMIT_SHORT_SHA}
#     - docker-compose -f docker-compose.production.yml run api npm test
#     - docker pull ${CONTAINER_IMAGE}-ui:${CI_COMMIT_SHORT_SHA}
#     - docker-compose -f docker-compose.production.yml run ui npm test
#     - docker pull ${CONTAINER_IMAGE}-bot:${CI_COMMIT_SHORT_SHA}
#     - docker-compose -f docker-compose.production.yml run ui npm test
#   tags:
#     - production

deploy:
  environment: production
  stage: deploy
  before_script:
    - echo ${REGISTRY_PASSWORD} | base64 -d | docker login -u ${REGISTRY_USER} --password-stdin
  script:
    - docker pull ${CONTAINER_IMAGE}-api:${CI_COMMIT_SHORT_SHA}
    - docker pull ${CONTAINER_IMAGE}-bot:${CI_COMMIT_SHORT_SHA}
    - docker pull ${CONTAINER_IMAGE}-ui:${CI_COMMIT_SHORT_SHA}
    - docker-compose -f docker-compose.production.yml up -d --force-recreate
  tags:
    - production
